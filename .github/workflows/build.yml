name: Build
on:
  push:
  release:
    types:
      - created
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        emacs_version:
          - 25.1
          - 25.3
          - 26.1
          - 26.3
          - 27.2
    steps:
    - name: Setup emacs-ci-nix for ${{ matrix.emacs_version }}
      uses: purcell/setup-emacs@master
      with:
        version: ${{ matrix.emacs_version }}

    - name: Setup Cask
      run: |
        curl -fsSkL https://raw.github.com/cask/cask/master/go | python
        echo "$HOME/.cask/bin" >> $GITHUB_PATH

    - name: Install rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source $HOME/.cargo/env

    - name: Install ripgrep
      run: cargo install ripgrep

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install emacs deps
      run: make deps

    - name: Run tests
      run: |
        emacs --version
        make test
  documentation:
    runs-on: ubuntu-latest
    # needs: tests
    if: github.ref == 'refs/heads/github_actions' || github.event_name == 'release'
    steps:
    - name: Setup emacs-ci-nix for emacs 27.2
      uses: purcell/setup-emacs@master
      with:
        version: 27.2

    - name: Setup Cask
      run: |
        curl -fsSkL https://raw.github.com/cask/cask/master/go | python
        echo "$HOME/.cask/bin" >> $GITHUB_PATH

    - name: Install sphinx
      run: sudo apt-get --yes install python3-sphinx

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install emacs deps
      run: make deps

    - name: Changed files
      id: files
      uses: jitterbit/get-changed-files@v1

    - name: Extract ref
      id: vars
      run: echo ::set-output name=ref::${GITHUB_REF#refs/*/}

    - name: Generate info documentation
      if: github.ref == 'refs/heads/github_actions' && contains(steps.files.outputs.all, 'docs/')
      run: |
        make info
        ls
        git diff
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git add rgel.info
        git commit -m 'Generate info documentation'
        git push
        # Clean to avoid pushing build artifacts in the steps below
        make clean-docs

    - name: Generate restructured text
      run:  make rst

    - name: Set documentation branch
      id: doc_branch
      run: |
        if [[ ${{ github.event_name }} = "release" ]]; then
          echo ::set-output name=branch::test_github_actions_release
        else
          echo ::set-output name=branch::test_github_actions_master
        fi

    - name: Deploy to branch ${{ steps.doc_branch.outputs.branch }}
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: ${{ steps.doc_branch.outputs.branch }}
        folder: docs/rst
        repository-name: dajva/rg.el-docs
        token: ${{ secrets.DOCUMENTATION_DEPLOYMENT }}

    - name: Tag release ${{ steps.extract_ref.outputs.ref }}
      if: github.event_name == 'release'
      env:
        RELEASE_VERSION: ${{ steps.extract_ref.outputs.ref }}
        DOCUMENTATION_DEPLOYMENT: ${{ secrets.DOCUMENTATION_DEPLOYMENT }}
      run: |
        git clone https://github.com/dajva/rg.el-docs
        cd rg.el-docs
        git checkout release
        git tag $RELEASE_VERSION
        git push https://x-access-token:${DOCUMENTATION_DEPLOYMENT}@github.com/dajva/rg.el-docs $RELEASE_VERSION

