name: Build
on:
  push:
  release:
    types:
      - created
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        emacs_version:
          - 25.1
          - 25.3
          - 26.1
          - 26.3
          - 27.2
    steps:
    - name: Setup emacs-ci-nix for ${{ matrix.emacs_version }}
      uses: purcell/setup-emacs@master
      with:
        version: ${{ matrix.emacs_version }}
    - name: Setup Cask
      run: |
        curl -fsSkL https://raw.github.com/cask/cask/master/go | python
        echo "$HOME/.cask/bin" >> $GITHUB_PATH
    - name: Install rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source $HOME/.cargo/env
    - name: Install ripgrep
      run: cargo install ripgrep
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install emacs deps
      run: make deps
    - name: Run tests
      run: |
        emacs --version
        make test
  documentation:
    runs-on: ubuntu-latest
    # needs: tests
    if: github.ref == 'refs/heads/github_actions' || github.event_name == 'release'
    steps:
    - name: Setup emacs-ci-nix for emacs 27.2
      uses: purcell/setup-emacs@master
      with:
        version: 27.2
    - name: Setup Cask
      run: |
        curl -fsSkL https://raw.github.com/cask/cask/master/go | python
        echo "$HOME/.cask/bin" >> $GITHUB_PATH
    - name: Install sphinx
      run: sudo apt-get --yes install python3-sphinx
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install emacs deps
      run: make deps
    - name: Changed files
      id: files
      uses: jitterbit/get-changed-files@v1
    - name: Generate restructured text
      run:  make rst
    - name: Generate info documentation
      if: contains(steps.files.outputs.all, 'workflows/')
      run: |
        make info
        cp docs/rst/_build/info/rgel.info .
        git status
        git diff
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: test_github_actions
        folder: docs/rst
        repository-name: dajva/rg.el-docs
        token: ${{ secrets.DOCUMENTATION_DEPLOYMENT }}
    - name: Extract tag
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Tag release ${{ steps.vars.outputs.tag }}
      if: github.event_name == 'release'
      env:
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        DOCUMENTATION_DEPLOYMENT: ${{ secrets.DOCUMENTATION_DEPLOYMENT }}
      run: |
        git clone https://github.com/dajva/rg.el-docs
        cd rg.el-docs
        git checkout release
        git tag $RELEASE_VERSION
        git push https://x-access-token:${DOCUMENTATION_DEPLOYMENT}@github.com/dajva/rg.el-docs $RELEASE_VERSION

